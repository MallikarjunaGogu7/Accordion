{
    "faqs": [
      {
        "id": 1,
        "question": "What is React?",
        "answer": "React is a JavaScript library for building user interfaces, particularly single-page applications where data changes over time."
      },
      {
        "id": 2,
        "question": "What is JSX?",
        "answer": "JSX is a syntax extension for JavaScript that allows you to write HTML-like code in your JavaScript files. It makes React components easier to read and write."
      },
      {
        "id": 3,
        "question": "What is a component in React?",
        "answer": "A component is a reusable piece of UI that can contain both structure (HTML) and behavior (JavaScript). Components can be functional or class-based."
      },
      {
        "id": 4,
        "question": "What is the virtual DOM?",
        "answer": "The virtual DOM is a lightweight copy of the actual DOM. React uses it to optimize updates and improve performance by minimizing direct manipulation of the real DOM."
      },
      {
        "id": 5,
        "question": "What are props in React?",
        "answer": "Props (short for properties) are read-only data passed from a parent component to a child component. They allow components to be dynamic and reusable."
      },
      {
        "id": 6,
        "question": "What is state in React?",
        "answer": "State is a built-in React object that stores data or information about the component. It allows components to manage and update their data dynamically."
      },
      {
        "id": 7,
        "question": "What is the difference between state and props?",
        "answer": "State is internal and controlled by the component itself, while props are external and controlled by whatever renders the component. State can change, but props are immutable."
      },
      {
        "id": 8,
        "question": "What are React hooks?",
        "answer": "React hooks are functions that let you use state and other React features in functional components. Examples include useState, useEffect, and useContext."
      },
      {
        "id": 9,
        "question": "What is useEffect in React?",
        "answer": "useEffect is a React hook that allows you to perform side effects in functional components, such as fetching data, updating the DOM, or subscribing to events."
      },
      {
        "id": 10,
        "question": "What is React Router?",
        "answer": "React Router is a library for routing in React applications. It allows you to navigate between different components in a single-page application without refreshing the page."
      }
    ]
  }